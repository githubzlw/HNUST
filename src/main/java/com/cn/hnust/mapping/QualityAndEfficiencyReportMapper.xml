<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hnust.dao.QualityAndEfficiencyReportMapper" >
  <resultMap id="BaseResultMap" type="com.cn.hnust.pojo.QualityAndEfficiencyReport" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="INTEGER" />
    <result column="uploader" property="uploader" jdbcType="VARCHAR" />
    <result column="upload_time" property="uploadTime" jdbcType="TIMESTAMP" />
    <result column="project_no" property="projectNo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, file_name, category, uploader, upload_time, project_no
  </sql>
  <select id="getAll" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from quality_and_efficiency_report
    where project_no like CONCAT('%', #{projectNo}, '%') 
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from quality_and_efficiency_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from quality_and_efficiency_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.hnust.pojo.QualityAndEfficiencyReport" >
    insert into quality_and_efficiency_report (id, file_name, category, 
      uploader, upload_time, project_no
      )
    values (#{id,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{category,jdbcType=INTEGER}, 
      #{uploader,jdbcType=VARCHAR}, #{uploadTime,jdbcType=TIMESTAMP}, #{projectNo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.hnust.pojo.QualityAndEfficiencyReport" >
    insert into quality_and_efficiency_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="uploader != null" >
        uploader,
      </if>
      <if test="uploadTime != null" >
        upload_time,
      </if>
      <if test="projectNo != null" >
        project_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="uploader != null" >
        #{uploader,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectNo != null" >
        #{projectNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.QualityAndEfficiencyReport" >
    update quality_and_efficiency_report
    <set >
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="uploader != null" >
        uploader = #{uploader,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectNo != null" >
        project_no = #{projectNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.QualityAndEfficiencyReport" >
    update quality_and_efficiency_report
    set file_name = #{fileName,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      uploader = #{uploader,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      project_no = #{projectNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>