<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hnust.dao.ProjectInspectionReportMapper" >
  <resultMap id="BaseResultMap" type="com.cn.hnust.pojo.ProjectInspectionReport" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="project_no" property="projectNo" jdbcType="VARCHAR" />
    <result column="report_name" property="reportName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="category" property="category" jdbcType="INTEGER" />
    <result column="eid" property="eid" jdbcType="INTEGER" />
    <result column="email_content" property="emailContent" jdbcType="VARCHAR" />
    <result column="process_instance_id" property="processInstanceId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_no, report_name, create_date,category,eid,email_content,process_instance_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from project_inspection_report
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from project_inspection_report
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  
  <insert id="insert" parameterType="com.cn.hnust.pojo.ProjectInspectionReport" >
    insert into project_inspection_report (id, project_no, report_name, 
      create_date)
    values (#{id,jdbcType=VARCHAR}, #{projectNo,jdbcType=VARCHAR}, #{reportName,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.hnust.pojo.ProjectInspectionReport" >
    insert into project_inspection_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectNo != null" >
        project_no,
      </if>
      <if test="reportName != null" >
        report_name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="eid != null" >
        eid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectNo != null" >
        #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="reportName != null" >
        #{reportName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.ProjectInspectionReport" >
    update project_inspection_report
    <set >
      <if test="projectNo != null" >
        project_no = #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="reportName != null" >
        report_name = #{reportName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.ProjectInspectionReport" >
    update project_inspection_report
    set project_no = #{projectNo,jdbcType=VARCHAR},
      report_name = #{reportName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 查询所以的记录信息 -->
  <select id="selectAllInspectionReport" resultMap="BaseResultMap" >
	    select 
	    <include refid="Base_Column_List" />
	    from project_inspection_report 

  </select>
  <!-- 查询所以的记录信息 -->
  <select id="getLast" resultMap="BaseResultMap" >
	    select 
	    <include refid="Base_Column_List" />
	    from project_inspection_report order by eid desc limit 1

  </select>
  <!-- 查询钉钉审批检验计划未处理 -->
  <select id="getall" resultMap="BaseResultMap" >
	    select 
	    <include refid="Base_Column_List" />
	    from project_inspection_report where eid=0 
	     <if test="createDate != null" >
        and create_date&gt;#{createDate,jdbcType=TIMESTAMP}
      </if>
	     
	    
	     order by create_date desc 

  </select>
  
  <!-- 查询所以的记录信息 -->
  <select id="selectInspectionReportByProjectNo" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from project_inspection_report
    where project_no=#{projectNo,jdbcType=VARCHAR} AND report_name!='' AND report_name not like '%检验%' ORDER BY create_date DESC
  </select>
  <!-- 查询所以的记录信息 -->
  <select id="getOne" resultMap="BaseResultMap" parameterType="java.lang.String">
    select a.project_no,a.report_name,ifnull(b.email_content,'')email_content,a.create_date from (
select project_no,report_name,create_date from project_inspection_report where project_no=#{projectNo,jdbcType=VARCHAR} and eid!=0 
order by create_date desc limit 1
) a left join (
select project_no,email_content,create_date,report_name from project_inspection_report where project_no=#{projectNo,jdbcType=VARCHAR} and eid=0
)b 
on a.project_no=b.project_no
  </select>
  
  <!-- 查询最新的检验计划 -->
  <select id="selectInspectionPlanByProjectNo" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    id, project_no, report_name, create_date,category,eid,email_content
    from project_inspection_report
    where project_no=#{projectNo,jdbcType=VARCHAR} AND (category=2 or email_content is not null) ORDER BY create_date DESC
  </select>
  <!-- 查询最新的检验计划 -->
  <select id="selectInspectionPlanByProjectNo1" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    id, project_no, report_name, create_date,category,eid,email_content
    from project_inspection_report
    where project_no=#{projectNo,jdbcType=VARCHAR} AND (category=2 or email_content is not null) ORDER BY create_date DESC
    limit 1
  </select>
   <!-- 批量添加图纸信息 -->
  <select id="batchAddInspectionReport" parameterType="java.util.List">
      INSERT INTO project_inspection_report(id,project_no,report_name,create_date,category,eid)  VALUES
      <foreach collection="list"  item="item" separator=",">
        (#{item.id,jdbcType=VARCHAR},#{item.projectNo,jdbcType=VARCHAR},#{item.reportName,jdbcType=VARCHAR},#{item.createDate,jdbcType=TIMESTAMP}
       ,#{item.category,jdbcType=INTEGER},#{item.eid,jdbcType=INTEGER} )
     </foreach>
  </select>
  
  
   
</mapper>