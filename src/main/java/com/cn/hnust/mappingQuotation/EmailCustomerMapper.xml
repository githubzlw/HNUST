<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hnust.daoQuotation.EmailCustomerMapper">
	<resultMap id="BaseResultMap" type="com.cn.hnust.pojo.EmailCustomer">
		<id column="cid" property="cid" jdbcType="INTEGER" />
		<result column="first_name" property="firstName" jdbcType="VARCHAR" />
		<result column="first_job" property="firstJob" jdbcType="VARCHAR" />
		<result column="gs_full_name" property="gsFullName" jdbcType="VARCHAR" />
		<result column="other_name1" property="otherName1" jdbcType="VARCHAR" />
		<result column="other_name2" property="otherName2" jdbcType="VARCHAR" />
		<result column="most_recognize" property="mostRecognize"
			jdbcType="VARCHAR" />
		<result column="recognize" property="recognize" jdbcType="VARCHAR" />
		<result column="email1" property="email1" jdbcType="VARCHAR" />
		<result column="email2" property="email2" jdbcType="VARCHAR" />
		<result column="email3" property="email3" jdbcType="VARCHAR" />
		<result column="email4" property="email4" jdbcType="VARCHAR" />
		<result column="email5" property="email5" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="country" property="country" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="post_code" property="postCode" jdbcType="VARCHAR" />
		<result column="site_url" property="siteUrl" jdbcType="VARCHAR" />
		<result column="tel" property="tel" jdbcType="VARCHAR" />
		<result column="fax" property="fax" jdbcType="VARCHAR" />
		<result column="info" property="info" jdbcType="VARCHAR" />
		<result column="ybtitle" property="ybtitle" jdbcType="VARCHAR" />
		<result column="qbtitle" property="qbtitle" jdbcType="VARCHAR" />
		<result column="recoder" property="recoder" jdbcType="VARCHAR" />
		<result column="recod_date" property="recodDate" jdbcType="TIMESTAMP" />
		<result column="sale_id" property="saleId" jdbcType="INTEGER" />
		<result column="sale_date" property="saleDate" jdbcType="TIMESTAMP" />
		<result column="is_translate" property="isTranslate" jdbcType="INTEGER" />
		<result column="translater_id" property="translaterId"
			jdbcType="INTEGER" />
		<result column="translater_date" property="translaterDate"
			jdbcType="TIMESTAMP" />
		<result column="is_audit" property="isAudit" jdbcType="INTEGER" />
		<result column="audit_date" property="auditDate" jdbcType="TIMESTAMP" />
		<result column="trans_date" property="transDate" jdbcType="TIMESTAMP" />
		<result column="date_line" property="dateLine" jdbcType="TIMESTAMP" />
		<result column="audit_flag" property="auditFlag" jdbcType="INTEGER" />
		<result column="sale_name" property="saleName" jdbcType="VARCHAR" />
		<result column="trans_name" property="transName" jdbcType="VARCHAR" />
		<result column="sale_name1" property="saleName1" jdbcType="VARCHAR" />
		<result column="projectStatus" property="projectstatus"
			jdbcType="INTEGER" />
		<result column="sale_id1" property="saleId1" jdbcType="INTEGER" />
		<result column="get_project" property="getProject" jdbcType="INTEGER" />
		<result column="transmit" property="transmit" jdbcType="INTEGER" />
		<result column="create_project" property="createProject"
			jdbcType="INTEGER" />
		<result column="send_date" property="sendDate" jdbcType="TIMESTAMP" />
		<result column="send_date1" property="sendDate1" jdbcType="TIMESTAMP" />
		<result column="blacklist" property="blacklist" jdbcType="INTEGER" />
		<result column="time" property="time" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="project_descc" property="projectDescc"
			jdbcType="VARCHAR" />
		<result column="project_desce" property="projectDesce"
			jdbcType="VARCHAR" />
		<result column="flow_state" property="flowState" jdbcType="INTEGER" />
		<result column="cid_name" property="cidName" jdbcType="VARCHAR" />
		<result column="confirm" property="confirm" jdbcType="INTEGER" />
		<result column="ccid" property="ccid" jdbcType="INTEGER" />
		<result column="ccname" property="ccname" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="customer_grade" property="customerGrade"
			jdbcType="VARCHAR" />
		<result column="project_id" property="projectId"
			jdbcType="VARCHAR" />
		<result column="download" property="download" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="original_mail" property="originalMail"
			jdbcType="VARCHAR" />
		<result column="companypicture" property="companypicture"
			jdbcType="VARCHAR" />
		<result column="logo" property="logo" jdbcType="INTEGER" />
		<result column="mailstatus" property="mailstatus" jdbcType="INTEGER" />
		<result column="proposer" property="proposer" jdbcType="VARCHAR" />
		<result column="new_old" property="newOld" jdbcType="INTEGER" />
		<result column="old_cid" property="oldCid" jdbcType="INTEGER" />
		<result column="tel1" property="tel1" jdbcType="VARCHAR" />
		<result column="tel2" property="tel2" jdbcType="VARCHAR" />
		<result column="tel3" property="tel3" jdbcType="VARCHAR" />
		<result column="address1" property="address1" jdbcType="VARCHAR" />
		<result column="address2" property="address2" jdbcType="VARCHAR" />
		<result column="priority" property="priority" jdbcType="INTEGER" />
		<result column="customer_type" property="customerType"
			jdbcType="INTEGER" />
		<result column="pullcustomers" property="pullcustomers"
			jdbcType="INTEGER" />
		<result column="newandoldcustomers" property="newandoldcustomers"
			jdbcType="INTEGER" />
		<result column="customer_status" property="customerStatus"
			jdbcType="INTEGER" />
		<result column="two_days_future_mail" property="twoDaysFutureMail"
			jdbcType="INTEGER" />
		<result column="incoming_mail" property="incomingMail"
			jdbcType="INTEGER" />
		<result column="compan_nature" property="companNature"
			jdbcType="VARCHAR" />
		<result column="office_in_china" property="officeInChina"
			jdbcType="INTEGER" />
		<result column="annualsales" property="annualsales" jdbcType="VARCHAR" />
		<result column="company_number" property="companyNumber"
			jdbcType="VARCHAR" />
		<result column="main_products" property="mainProducts"
			jdbcType="VARCHAR" />
		<result column="projectstatus" property="projectStatus"
			jdbcType="VARCHAR" />
		<result column="company_definition" property="companyDefinition"
			jdbcType="INTEGER" />
		<result column="customer_attributes" property="customerAttributes"
			jdbcType="INTEGER" />
		<result column="approval_time" property="approvalTime"
			jdbcType="TIMESTAMP" />
		<result column="abandon_customer_time" property="abandonCustomerTime"
			jdbcType="TIMESTAMP" />
		<result column="examine_approve" property="examineApprove"
			jdbcType="INTEGER" />
		<result column="public_customer_pool" property="publicCustomerPool"
			jdbcType="INTEGER" />
		<result column="examine_approve_time" property="examineApproveTime"
			jdbcType="VARCHAR" />
		<result column="blacklist1" property="blacklist1" jdbcType="INTEGER" />
		<result column="start" property="start" jdbcType="INTEGER" />
		<result column="end" property="end" jdbcType="INTEGER" />
		<result column="projectStatus" property="projectStatus" jdbcType="INTEGER" />
		<result column="day" property="day" jdbcType="INTEGER" />
		<result column="outlook_customers" property="outlookCustomers" jdbcType="INTEGER" />

		<result column="createTime" property="createTime" jdbcType="VARCHAR" />
		<result column="email_from" property="emailfrom" jdbcType="LONGVARCHAR" />
		<result column="ybcontent" property="ybcontent" jdbcType="LONGVARCHAR" />
		<result column="qbcontent" property="qbcontent" jdbcType="LONGVARCHAR" />
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
		<result column="companyprofile" property="companyprofile"
			jdbcType="LONGVARCHAR" />
		<result column="get_content" property="getContent" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		cid, first_name, first_job, gs_full_name, other_name1, other_name2,
		most_recognize,
		recognize, email1, email2, email3, email4, email5, address, country, state,
		city,
		post_code, site_url, tel, fax, info, ybtitle, qbtitle, recoder, recod_date,
		sale_id,
		sale_date, is_translate, translater_id, translater_date, is_audit, audit_date,
		trans_date,
		date_line, audit_flag, sale_name, trans_name, sale_name1, projectStatus,
		sale_id1,
		get_project, transmit, create_project, send_date, send_date1, blacklist, time,
		title,
		project_descc, project_desce, flow_state, cid_name, confirm, ccid, ccname, status,
		customer_grade, download, type, original_mail, companypicture, logo,
		mailstatus,
		proposer, new_old, old_cid, tel1, tel2, tel3, address1, address2, priority,
		customer_type,
		pullcustomers, newandoldcustomers, customer_status, two_days_future_mail,
		incoming_mail,
		compan_nature, office_in_china, annualsales, company_number, main_products,
		company_definition,
		customer_attributes, approval_time, abandon_customer_time, examine_approve,
		examine_approve_time,
		blacklist1,ybcontent, qbcontent, content, companyprofile, get_content
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />


		from email_customer
		where cid = #{cid,jdbcType=INTEGER}
	</select>
	<!-- 查询我们发给客户邮件，客户未回复我们 -->
	
	<select id="gettingUnresponsiveCustomers" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
	SELECT ec.cid,ec.first_name,ec.ybcontent,ec.recod_date,ifnull(eu.user_name,'')sale_name,ec.customer_grade,ecl.project_id,ec.email1,ec.site_url FROM `email_customer` ec
left join (select c_id,min(e_id)e_id from  email_info group by c_id) info on ec.cid=info.c_id
left join (select * from email_receive_clean group by cid) erc on erc.cid=ec.cid
left join (select email_client_id,max(project_id)project_id from email_clientid group by email_client_id)ecl on ec.cid=email_client_id
left join email_sale es on es.cid=ec.cid
left join email_user eu on eu.id=es.sale_id
where    type=2 and ec.blacklist=0 and customer_attributes=0 
and datediff(now(),recod_date)&lt;45 and info.e_id is not null and erc.cid is null
	</select>
	<!-- 查询45天我们未发邮件给的公司邮箱 -->
	<select id="getUncontactedCompanyMailbox" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
	select ec.cid,first_name,ybcontent,recod_date,ifnull(eu.user_name,'')sale_name,ec.customer_grade,ec.email1,ec.site_url from email_customer ec left  join email_info info on ec.cid=info.c_id
left join email_sale es on ec.cid=es.cid left join email_user eu on eu.id=es.sale_id 
where datediff(now(),recod_date)&lt;45  and blacklist=0 and customer_attributes=0
and info.e_id is null and type=2
	</select>
	<!-- 查询多少客户失联及天数 -->
	
	<select id="queryLostCustomers1" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
	select a.cid,a.cid_name,datediff(now(),send_date)day,ifnull(user_name,'')sale_name,a.first_name from (
select ec.cid,ec.cid_name,ifnull(ei.send_date,ec.recod_date)send_date,ifnull(eu.user_name,'')user_name,ec.first_name from 
email_customer ec left join (select c_id,max(code_date)send_date from email_info group by c_id) ei on ei.c_id=ec.cid
left join email_sale es on es.cid=ec.cid left join email_user eu on eu.id=es.sale_id
where blacklist=0 and email1 is not null and cid_name is not null
and customer_attributes=0)a 
	</select>
	<!-- 查询存在多少丢失客户 -->
	<select id="getCustomerLose" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	SELECT count(1) from (select ec.cid FROM email_customer ec  where 
pay_money=1 and ( ec.cid in (
select email_client_id from email_clientid where sale_id =#{saleId,jdbcType=INTEGER}
or sale_id1=#{saleId,jdbcType=INTEGER}
)
or ec.cid in (select cid from email_sale where sale_id1=#{saleId,jdbcType=INTEGER}
or sale_id=#{saleId,jdbcType=INTEGER}))
and ec.cid not in (select cid from email_receive_clean where 1=1 and  datediff(now(),send_date)&lt;90  
) and ec.cid in (select cid from email_receive_clean where 1=1 and  datediff(now(),send_date)&gt;90)
group by ec.cid)a
	</select>
	
<select id="getCustomerAllLose" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	select * from(select ec.cid,ec.first_name,ec.is_translate,ec.customer_grade,ec.country,ec.tel1
	,ec.tel2,ec.tel,ec.tel3,ec.gs_full_name,ec.type,ec.site_url,ec.email1
	,ifnull(ecl.email_client_id,0)projectStatus,ifnull(eu.user_name,'')trans_name
	 FROM email_customer ec 
	 left join (select email_client_id from email_clientid where (projectStatus=2 or projectStatus=3)
	  group by email_client_id)ecl on ec.cid=ecl.email_client_id 
	 left join email_user eu on ec.translater_id=eu.id  
	   where 
pay_money=1 and ( ec.cid in (
select email_client_id from email_clientid where sale_id =#{saleId,jdbcType=INTEGER}
or sale_id1=#{saleId,jdbcType=INTEGER}
)
or ec.cid in (select cid from email_sale where sale_id1=#{saleId,jdbcType=INTEGER}
or sale_id=#{saleId,jdbcType=INTEGER}))
and ec.cid not in (select cid from email_receive_clean where 1=1 and  datediff(now(),send_date)&lt;90  
) and ec.cid in (select cid from email_receive_clean where 1=1 and  datediff(now(),send_date)&gt;90)
group by ec.cid 
) a    order by cid desc limit #{start},#{end}
	</select>
	
	
	<select id="getAllContactWithCustomers" resultMap="BaseResultMap" >
		select cid,cid_name,day,sale_name,first_name from (
	select a.cid,a.cid_name,datediff(now(),send_date)day,ifnull(user_name,'')sale_name,a.first_name from (
select ec.cid,ec.cid_name,ifnull(ei.send_date,ec.recod_date)send_date,ifnull(eu.user_name,'')user_name,ec.first_name
,ifnull(cus.one_month,0)one_month,ifnull(cus.three_month,0)three_month,ifnull(cus.six_month,0)six_month,ifnull(cus.one_year,0)one_year,
ifnull(cus.two_year,0)two_year,ifnull(cus.three_year,0)three_year,ifnull(cus.four_year,0)four_year,ifnull(cus.five_year,0)five_year,
ifnull(cus.six_year,0)six_year,ifnull(cus.seven_year,0)seven_year,ifnull(cus.eight_year,0)eight_year,ifnull(cus.nine_year,0)nine_year from 
email_customer ec left join (select c_id,max(code_date)send_date from email_info group by c_id) ei on ei.c_id=ec.cid
left join email_sale es on es.cid=ec.cid left join email_user eu on eu.id=es.sale_id left join customer_uncontacted_table
cus on cus.cid=ec.cid
where blacklist=0 and email1 is not null and cid_name is not null
and customer_attributes=0
<if test="saleId !=0">
				and  eu.id=#{saleId,jdbcType=INTEGER}
	</if>
	
)a where 1=1 

<if test="day ==1">
				and  one_month=0
	</if>
	<if test="day ==2">
				and three_month= 0 
	</if>
	<if test="day ==3">
				and six_month= 0 
	</if>
	<if test="day ==4">
				and one_year= 0
	</if>
	<if test="day ==5">
				and two_year=0 
	</if>
	<if test="day ==6">
				and three_year=0 
	</if>
	<if test="day ==7">
				and four_year=0 
	</if>
	<if test="day ==8">
				and five_year=0
	</if>
	<if test="day ==9">
				and six_year=0 
	</if>
	<if test="day ==10">
				and seven_year=0 
	</if>
	<if test="day ==11">
				and eight_year=0 
	</if>
	<if test="day ==12">
				and nine_year=0
	</if>

)a where 1=1

<if test="day ==0">
				and a.day &lt; 30
	</if>
<if test="day ==1">
				and a.day &lt; 90 and a.day &gt;= 30 
	</if>
	<if test="day ==2">
				and a.day &lt; 180 and a.day &gt;= 90 
	</if>
	<if test="day ==3">
				and a.day &lt; 360 and a.day &gt;= 180 
	</if>
	<if test="day ==4">
				and a.day &lt; 720 and a.day &gt;= 360 
	</if>
	<if test="day ==5">
				and a.day &lt; 1080 and a.day &gt;=720 
	</if>
	<if test="day ==6">
				and a.day &lt; 1440 and a.day &gt;= 1080 
	</if>
	<if test="day ==7">
				and a.day &lt; 1800 and a.day &gt;= 1440 
	</if>
	<if test="day ==8">
				and a.day &lt; 2160 and a.day &gt;= 1800 
	</if>
	<if test="day ==9">
				and a.day &lt; 2520 and a.day &gt;= 2160 
	</if>
	<if test="day ==10">
				and a.day &lt; 2880 and a.day &gt;= 2520 
	</if>
	<if test="day ==11">
				and a.day &lt; 3240 and a.day &gt;= 2880 
	</if>
	<if test="day ==12">
				and a.day &lt; 3600 and a.day &gt;= 3240 
	</if>
	
	group by cid,cid_name,day,sale_name,first_name
	</select>

<!--查看销售放弃客户申请  -->
	<select id="getCheckApprove" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		ec.cid,ec.first_name,ifnull(eu.user_name,'')transName,ec.customer_grade,ec.abandon_customer_time,ec.blacklist1


		from email_customer ec left join email_user eu on
		eu.id=ec.translater_id
		where blacklist=0 and examine_approve=1 order by ec.abandon_customer_time
		desc
		limit #{pageNumber},#{pageSize}
	</select>
	<select id="getCheckApproveTotal" resultType="java.lang.Integer">
		select
		count(1)
		from email_customer ec left join email_user eu on eu.id=ec.translater_id
		where blacklist=0 and examine_approve=1
   </select>
   <!-- 查询存在多少先联系在报价客户 -->
	<select id="getContactCustomersBeforeQuotingTotal" resultType="java.lang.Integer">
		select
		count(1)
		from email_customer ec left join email_sale es on es.cid=ec.cid
		where ec.blacklist=0 and is_translate=6 and es.sales_assistant=#{saleId1}
   </select>
	<select id="getContactCustomersBeforeQuoting" resultMap="BaseResultMap">
		select
		ec.*
		from email_customer ec left join email_sale es on es.cid=ec.cid
		where ec.blacklist=0 and is_translate=6 and es.sales_assistant=#{saleId}
		limit #{start},#{end}
   </select>
   <!--翻译查看8月之后全部客户收件  -->
	<select id="getViewCustomerMail" resultMap="BaseResultMap"
		>
		select ec.cid,ec.first_name,ec.customer_grade,ifnull(vc.user_name,'')trans_name,ifnull(vc.time,null)trans_date from email_customer ec left join view_customer_mail vc on ec.cid=vc.cid
		where ec.cid in(SELECT cid FROM email_customer ec  where cid in (select email_client_id from email_clientid where erp_client_id in(select mid from test where 1=1
		<if test="cid !=0">
				and cid=#{cid,jdbcType=INTEGER}
	</if>
		 ) )
		)
		order by trans_name
		limit #{start},#{end}
	</select>
	<select id="getViewCustomerMailTotal" resultType="java.lang.Integer">
			select count(1) from email_customer ec left join view_customer_mail vc on ec.cid=vc.cid
		where ec.cid in(SELECT cid FROM email_customer ec  where cid in (select email_client_id from email_clientid where erp_client_id in(select mid from test where 1=1 
		<if test="cid !=0">
				and cid=#{cid,jdbcType=INTEGER}
	</if>
		) )
		)
   </select>
	<select id="gettimeOutNoMail" resultMap="BaseResultMap"
		>
		 select ec.cid,ec.first_name,ec.is_translate,ec.customer_grade,ec.country,ec.tel1
	,ec.tel2,ec.tel,ec.tel3,ec.gs_full_name,ec.type,ec.site_url,ec.email1
	,ifnull(ecl.email_client_id,0)projectStatus,ifnull(eu.user_name,'')trans_name from email_customer ec left join email_info info on ec.cid=info.c_id
	left join email_sale es on es.cid=ec.cid left join email_user eu on eu.id=es.sale_id
			left join ( select email_client_id,min(create_time)create_time from email_clientid group by email_client_id) ecl on ecl.email_client_id=ec.cid
		where info.c_id is  null and ec.blacklist=0 and ec.email1 is not null and datediff(now(),ecl.create_time)&gt;2
		and es.sale_id=#{saleId,jdbcType=INTEGER}
and datediff(now(),ecl.create_time)&lt;60
		limit #{start},#{end}
	</select>
	<select id="gettimeOutNoMailTotal" resultType="java.lang.Integer">
			select count(*) from email_customer ec left join email_info info on ec.cid=info.c_id
			left join ( select email_client_id,min(create_time)create_time from email_clientid group by email_client_id) ecl on ecl.email_client_id=ec.cid
		left join email_sale es on es.cid=ec.cid
		where info.c_id is  null and ec.blacklist=0 and ec.email1 is not null and datediff(now(),ecl.create_time)&gt;2
		and es.sale_id=#{saleId,jdbcType=INTEGER}
and datediff(now(),ecl.create_time)&lt;60
   </select>
	<select id="getNoReplayTwoMonth" resultMap="BaseResultMap"
		>
select  ec.is_translate,ifnull(eu.user_name,'')sale_name,ec.outlook_customers,ec.cid,ec.first_name,ec.site_url,ec.ybcontent,ecl.project_id,ecl.projectStatus,ifnull(a.content1,'')content,a.send_date from email_customer ec
left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id from email_clientid where project_id in(
select max(project_id)project_id from email_clientid 
where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id
left join new_quotes nq on nq.project_id=ecl.project_id

left join (
select cid,content1,send_date from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where ec.cid in (
select erc.cid from email_receive_clean erc where id in(

select * from (select max(id)id from email_receive_clean  where cid !=0 and 

cid is not NULL  and datediff(now(),code_date)&lt;60


group by cid)a) and is_reply=0
        and ec.cid not in(select user_id from email_receive_clean where send_date >= DATE_SUB(now(),INTERVAL 2 MONTH) and is_reply = 1)

and ((nq.project_id is not null and nq.quote_follow_status !=3 and nq.quote_follow_status  !=8) or nq.project_id is null)
)and ec.blacklist=0
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
limit #{start},#{end}
	</select>
	<select id="getNoReplayTwoMonthTotal" resultType="java.lang.Integer">
		select  count(*) from email_customer ec 
left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id from email_clientid where project_id in(
select max(project_id)project_id from email_clientid 
where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id
left join new_quotes nq on nq.project_id=ecl.project_id

left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where ec.cid in (
select erc.cid from email_receive_clean erc where id in(

select * from (select max(id)id from email_receive_clean  where cid !=0 and 

cid is not NULL  and datediff(now(),code_date)&lt;60 


group by cid)a) and is_reply=0
        and ec.cid not in(select user_id from email_receive_clean where send_date >= DATE_SUB(now(),INTERVAL 2 MONTH) and is_reply = 1)

and ((nq.project_id is not null and nq.quote_follow_status !=3 and nq.quote_follow_status  !=8) or nq.project_id is null)
)and ec.blacklist=0
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
   </select>
	<select id="getAbandonedItems" resultMap="BaseResultMap"
		>

select  ec.is_translate,ifnull(eu.user_name,'')sale_name,ec.outlook_customers,ec.cid,ec.first_name,ec.site_url,ec.ybcontent,ecl.project_id,ecl.projectStatus,ifnull(a.content1,'')content
 from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id from email_clientid where project_id in(
select max(project_id)project_id from email_clientid 
where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id

left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where (customer_grade like 'A%' OR customer_grade like 'B%') and ec.blacklist!=0
AND DATEDIFF(NOW(),RECOD_DATE )&lt;60
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
limit #{start},#{end}
	</select>
	<select id="getAbandonedItemsTotal" resultType="java.lang.Integer">
			select  count(*)
 from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id from email_clientid where project_id in(
select max(project_id)project_id from email_clientid 
where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id

left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where (customer_grade like 'A%' OR customer_grade like 'B%') and ec.blacklist!=0
AND DATEDIFF(NOW(),RECOD_DATE )&lt;60
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
   </select>
	<select id="getApprovalNoReplay" resultMap="BaseResultMap"
		>

select  ec.is_translate,ifnull(eu.user_name,'')sale_name,ec.outlook_customers,ec.cid,ec.first_name,ec.site_url,ec.ybcontent,ecl.project_id,ecl.projectStatus,ifnull(a.content1,'')content
 from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select max(project_id)project_id from email_clientid 

where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id
left join email_info ei on ei.c_id=ec.cid
left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where DATEDIFF(NOW(),ecl.create_time )&lt;60 and DATEDIFF(NOW(),ecl.create_time )&gt;7 and ei.c_id is null
and ec.blacklist=0 and ec.email1 is not null
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
limit #{start},#{end}
	</select>
	<select id="getApprovalNoReplayTotal" resultType="java.lang.Integer">
		select  count(*)
 from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select max(project_id)project_id from email_clientid 

where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id
left join email_info ei on ei.c_id=ec.cid
left join email_user eu on eu.id=es.sale_id
where DATEDIFF(NOW(),ecl.create_time )&lt;60 and DATEDIFF(NOW(),ecl.create_time )&gt;7 and ei.c_id is null
and ec.blacklist=0 and ec.email1 is not null
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
   </select>
	<select id="getRecentTranslationProjects" resultMap="BaseResultMap"
		>



select  ec.cid,ec.first_name,ec.site_url,ec.ybcontent,ecl.project_id,ecl.projectStatus,ec.recod_date,ect.translater_date,ifnull(a.content1,'')content
,ifnull(ec.create_time,'')createTime,ifnull(eu.user_name,'')transName from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select min(project_id)project_id from email_clientid 

where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id
left join email_customer_trans ect on ec.cid=ect.c_id
left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
left join email_user eu on eu.id=ec.translater_id
where ec.blacklist=0 and ybcontent !='' and ec.translater_id in (235,236,258,259)
order by ec.cid desc limit 100


	</select>
	<select id="getRecentTranslationProjectsTotal" resultType="java.lang.Integer">
	select count(*) from (select  ec.cid,ec.first_name,ec.site_url from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select min(project_id)project_id from email_clientid 

where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id
left join email_customer_trans ect on ec.cid=ect.c_id
where ec.blacklist=0 and ybcontent !='' and ec.translater_id in (235,236,237) 
order by project_id desc limit 100)a
   </select>
   
   
   <select id="getTransTime" resultType="java.lang.Integer">
	select ifnull(day,0)day from(select sum(day)day from (
select  datediff(ect.translater_date,ec.create_time)day from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select min(project_id)project_id from email_clientid 

where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id
left join email_customer_trans ect on ec.cid=ect.c_id
where ec.blacklist=0 and ybcontent !='' and ec.translater_id in (236,237) 
order by project_id desc limit 100
)a)a
   </select>
   
   <select id="getTransTime1" resultType="java.lang.Integer">
	select ifnull(day,0)day from(select sum(day)day from (
select  datediff(ect.translater_date,ec.create_time)day from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select min(project_id)project_id from email_clientid 

where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id
left join email_customer_trans ect on ec.cid=ect.c_id
where ec.blacklist=0 and ybcontent !='' and ec.translater_id in (235) 
order by project_id desc limit 100
)a)a
   </select>
   
   <select id="getNoQuotes" resultMap="BaseResultMap"
		>

select  ec.is_translate,ifnull(eu.user_name,'')sale_name,ec.outlook_customers,ec.cid,ec.first_name,ec.site_url,ec.ybcontent,ecl.project_id,ecl.projectStatus,ifnull(a.content1,'')content
 from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select project_id from new_quotes where  datediff(now(),create_time)&lt;60
and (quoter is   null  or quoter='') and quotation_status='待估价') )ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id
left join new_quotes nq on nq.project_id=ecl.project_id
left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where ecl.project_id is not null  and ec.blacklist=0
and ((nq.project_id is not null and nq.quote_follow_status !=3 and nq.quote_follow_status  !=8) or nq.project_id is null)
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
limit #{start},#{end}
	</select>
	<select id="getNoQuotesTotal" resultType="java.lang.Integer">
		select  count(*)
 from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select project_id from new_quotes where  datediff(now(),create_time)&lt;60
and (quoter is   null  or quoter='') and quotation_status='待估价') )ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id
left join new_quotes nq on nq.project_id=ecl.project_id
left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where ecl.project_id is not null  and ec.blacklist=0
and ((nq.project_id is not null and nq.quote_follow_status !=3 and nq.quote_follow_status  !=8) or nq.project_id is null)
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
   </select>
   <select id="getNoOffer" resultMap="BaseResultMap"
		>

select  ec.is_translate,ifnull(eu.user_name,'')sale_name,ec.outlook_customers,ec.cid,ec.first_name,ec.site_url,ec.ybcontent,ecl.project_id,ecl.projectStatus,ifnull(a.content1,'')content
 from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select project_id from new_quotes where datediff(now(),create_time)&lt;60 and quote_time is null 
and (quoter is not  null  or quoter!='' ) and quotation_status!='待估价'))ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id
left join new_quotes nq on nq.project_id=ecl.project_id
left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where  ecl.project_id is not null and ec.blacklist=0 

and ((nq.project_id is not null and nq.quote_follow_status !=3 and nq.quote_follow_status  !=8) or nq.project_id is null)
and quotation_status!='报价已发出'
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
limit #{start},#{end}
	</select> 
	<select id="getNoOfferTotal" resultType="java.lang.Integer">
		select  count(1)
 from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select project_id from new_quotes where datediff(now(),create_time)&lt;60 and quote_time is null 
and (quoter is not  null  or quoter!='' ) and quotation_status!='待估价'))ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id
left join new_quotes nq on nq.project_id=ecl.project_id
left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where  ecl.project_id is not null and ec.blacklist=0 

and ((nq.project_id is not null and nq.quote_follow_status !=3 and nq.quote_follow_status  !=8) or nq.project_id is null)
and quotation_status!='报价已发出'
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
   </select>
   <select id="getABLevelCustomer" resultMap="BaseResultMap"
		>

select  ec.is_translate,ifnull(eu.user_name,'')sale_name,ec.outlook_customers,ec.cid,ec.first_name,ec.site_url,ec.ybcontent,ecl.project_id,ecl.projectStatus,ifnull(ecl.create_time,'')createTime,ifnull(a.content1,'')content
 from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select min(project_id)project_id from email_clientid 

where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id

left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where  ecl.project_id is not null and ( ec.customer_grade like 'A%' or ec.customer_grade like 'B%')
and ec.blacklist=0
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
<if test="createTime!=null">
and DATE_FORMAT(ecl.create_time,'%Y-%m')= DATE_FORMAT(#{createTime},'%Y-%m')

</if>

 order BY ecl.create_time desc
limit #{start},#{end}
	</select> 
	<select id="getABLevelCustomerTotal" resultType="java.lang.Integer">
		select count(*) from email_customer ec left join email_sale es on ec.cid=es.cid
left join (select project_id,projectStatus,email_client_id,create_time from email_clientid where project_id in(
select min(project_id)project_id from email_clientid 

where project_id not like '%-%'
group by email_client_id))ecl on ec.cid=ecl.email_client_id

left join email_user eu on eu.id=es.sale_id

left join (
select cid,content1 from email_receive_clean where id in(
select id from (select max(id)id from email_receive_clean  group by cid)a)) a on a.cid=ec.cid
where  ecl.project_id is not null and ( ec.customer_grade like 'A%' or ec.customer_grade like 'B%')
and ec.blacklist=0
<if test="saleName!=null">
and eu.user_name=#{saleName}

</if>
<if test="createTime!=null">
and DATE_FORMAT(ecl.create_time,'%Y-%m')= DATE_FORMAT(#{createTime},'%Y-%m')

</if>



   </select>
<!--查看管理员邮箱信息  -->
	<select id="search" resultType="java.lang.Integer" parameterType="java.lang.String">
		select
		count(1)
       from email_customer ec 
		where email_from like  concat(concat('%',#{emailfrom}),'%')
		 and datediff(now(),recod_date) &lt;5
	</select>
	<!--待总裁审批  -->
	<select id="getPresidentApprovalTotal" resultType="java.lang.Integer" parameterType="java.lang.String">
		select count(*) from new_quotes nq left join customer cus on nq.cid=cus.id 
left join email_customer ec on ec.cid=cus.cid


where nq.sale_name=#{saleName,jdbcType=VARCHAR} and nq.distinguish=0
and nq.president_handling=1 and
 (ec.customer_grade like '%A%' OR ec.customer_grade like '%B%' OR (ec.customer_grade like '%C%' AND ec.type=2))
 and (nq.quote_follow_status=4 or nq.quote_follow_status=12)
	</select>
	<!--你有X个 项目 状态不正确 -->
	<select id="getincorrectProjectStatusTotal" resultType="java.lang.Integer" parameterType="java.lang.String">
		select count(*) from new_quotes nq left join customer cus on nq.cid=cus.id 
left join email_customer ec on ec.cid=cus.cid
left join (select cid,min(send_date)send_date from email_receive_clean erc group by cid)
erc on erc.cid=ec.cid

where nq.sale_name=#{saleName,jdbcType=VARCHAR} and nq.distinguish=0

and DATEDIFF(now(),erc.send_date)&gt;14

and (nq.quote_follow_status!=2 or nq.quote_follow_status=12)
	</select>
	<!--有X个 项目需要 更新状态  -->
	<select id="getprojectUpdateStatusTotal" resultType="java.lang.Integer" parameterType="java.lang.String">
		select count(*) from new_quotes nq left join customer cus on nq.cid=cus.id 
left join email_customer ec on ec.cid=cus.cid
left join (select cid,min(send_date)send_date from email_receive_clean erc group by cid)
erc on erc.cid=ec.cid

where nq.sale_name=#{saleName,jdbcType=VARCHAR} and nq.distinguish=0

and DATEDIFF(now(),erc.send_date)&gt;14


and (nq.quotation_status!='已下单' and nq.quotation_status!='已放弃')
	</select>
<!--查看最近30天客户  -->
	<select id="queryCustomerInformation" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		ec.cid,ec.first_name,ec.email1,ec.gs_full_name,ec.tel

		from email_customer ec 
		where blacklist=0 and DATEDIFF(now(),recod_date) &lt;30
		limit #{start},#{end}
	</select>
	<!-- 查询最近30天全部客户数 -->
	<select id="queryCustomerInformationTotal" resultType="java.lang.Integer">
		select count(1) from email_customer 
		where blacklist=0 and datediff(now(),recod_date) &lt;30

	</select>
    <!--查看销售助理全部客户  -->
	<select id="viewAllCustomers" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		ec.*
        from email_customer ec left join  email_sale es on ec.cid=es.cid
		where blacklist=0
		 <if test="saleId != null">
				and es.sales_assistant=	#{saleId,jdbcType=INTEGER}
			</if>
			<if test="cid != null">
				and ec.cid=	#{cid,jdbcType=INTEGER}
			</if>
			order by ec.cid desc
		limit #{start},#{end}
	</select>
	<!-- 查询销售助理全部客户数 -->
	<select id="viewAllCustomersTotal" resultType="java.lang.Integer">
		select
		count(1)
        from email_customer ec left join  email_sale es on ec.cid=es.cid
		where blacklist=0
          <if test="saleId != null">
			and es.sales_assistant=	#{saleId,jdbcType=VARCHAR}
			</if>
			<if test="cid != null">
				and ec.cid=	#{cid,jdbcType=INTEGER}
			</if>
	</select>
	<!-- 查看翻译后内容 -->
	<select id="getCustomer" resultMap="BaseResultMap" >
		select
		content
        from email_customer_trans
        where  1=1
        <if test="cid != null">
				and c_id=	#{cid,jdbcType=INTEGER}
			</if>
			limit 1;
	</select>
	<!--掉是否给客户发邮件  -->
	<select id="getUncontacted" parameterType="java.util.List" resultType="int">
		select count(1) from email_clientid ecl left join(select max(code_date)code_date,c_id from email_info group by c_id
) ei on ecl.email_client_id=ei.c_id where ecl.project_id in 
<foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
        
      #{item.projectId,jdbcType=VARCHAR}
</foreach>

and datediff(now(),code_date) &lt;=30

	</select>
	
	
	
	
	<!--A/B级项目  -->
	<select id="getLookABEmail" resultMap="BaseResultMap" parameterType="com.cn.hnust.pojo.EmailCustomer">
		select xx.project_id,ecl.projectStatus,a.cid,ec.first_name,ec.customer_grade,ifnull(eu.user_name,'')sale_name,ec.time 
		         ,ifnull(eu1.user_name,'')sale_name1,ec.blacklist from (select mm.cid ,mm.send_date from ( select ec.cid ,max(send_date)send_date from 
		         (select erc.cid,erc.send_date from email_receive_clean erc   where  erc.is_delete=0 UNION  
		         select em.c_id,em.code_date from email_info  em where  em.is_delete=0 ) ec   group by ec.cid )mm  
		         where mm.cid is not null and mm.cid!=0  order by mm.send_date desc)a left join email_customer ec 
		             on ec.cid =a.cid  left join email_sale es on a.cid=es.cid 
		             Left join (select email_client_id,max(project_id)project_id from email_clientid group  by email_client_id)xx on xx.email_client_id=ec.cid 
		          left join email_user eu on eu.id=es.sale_id left join  email_user eu1 on eu1.id=es.sale_id1 
		          left join (select email_client_id ,max(projectStatus)projectStatus from  email_clientid where (projectStatus=2 or projectStatus=3) group by email_client_id 
		         union select email_client_id, projectStatus from (select email_client_id ,max(projectStatus)projectStatus from  email_clientid where projectStatus!=2 and projectStatus!=3 group by email_client_id)a
		          where a. email_client_id not in (select email_client_id from  email_clientid where (projectStatus=2 or projectStatus=3) group by email_client_id)) ecl on a.cid=ecl.email_client_id 
		        	 where (ec.customer_grade='A+' OR ec.customer_grade='A' OR ec.customer_grade='B')
		       <if test="cid != null">
				and a.cid = #{cid,jdbcType=Integer}
			</if>
			<if test="saleId != null">
				and (eu.id=#{saleId,jdbcType=Integer} or eu1.id=#{saleId,jdbcType=Integer})
			</if>
			<if test="projectStatus != null">
				and ecl.projectStatus = #{projectStatus,jdbcType=LONGVARCHAR}
			</if>
		    limit #{start}, #{end}
		</select>
	<!--A/B级项目数 -->
	<select id="getLookABEmaiTotal" resultType="int" parameterType="com.cn.hnust.pojo.EmailCustomer"   >
		select count(*) from (select mm.cid ,mm.send_date from ( select ec.cid ,max(send_date)send_date from 
		         (select erc.cid,erc.send_date from email_receive_clean erc   where  erc.is_delete=0 UNION  
		        	select em.c_id,em.code_date from email_info  em where  em.is_delete=0 ) ec   group by ec.cid )mm  
		         	 where mm.cid is not null and mm.cid!=0  order by mm.send_date desc)a left join email_customer ec 
		             on ec.cid =a.cid  left join email_sale es on a.cid=es.cid 
		          left join email_user eu on eu.id=es.sale_id left join  email_user eu1 on eu1.id=es.sale_id1 
		          left join (select email_client_id ,max(projectStatus)projectStatus from  email_clientid where (projectStatus=2 or projectStatus=3) group by email_client_id 
		         union select email_client_id, projectStatus from (select email_client_id ,max(projectStatus)projectStatus from  email_clientid where projectStatus!=2 and projectStatus!=3 group by email_client_id)a
		          where a. email_client_id not in (select email_client_id from  email_clientid where (projectStatus=2 or projectStatus=3) group by email_client_id)) ecl on a.cid=ecl.email_client_id 
		        	 where (ec.customer_grade='A+' OR ec.customer_grade='A' OR ec.customer_grade='B')
		        	 <if test="cid != null">
				and a.cid = #{cid,jdbcType=Integer}
			</if>
			<if test="saleId != null">
				and (eu.id=#{saleId,jdbcType=Integer} or eu1.id=#{saleId,jdbcType=Integer})
			</if>
			<if test="projectStatus != null">
				and ecl.projectStatus = #{projectStatus,jdbcType=LONGVARCHAR}
			</if>

	</select>
	
	
	
	<!--查看公共客户池  -->
	<select id="viewThePublicCustomerPool" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		
select
		ec.email1,ifnull(ec.tel,'')tel,ifnull(ec.tel1,'')tel1,ifnull(ec.tel2,'')tel2,ifnull(ec.tel3,'')tel3,ec.cid,ec.first_name,ifnull(eu.user_name,'')transName,ec.ybcontent,ec.customer_grade,ec.audit_date,ifnull(ecf.file_name,'')address2,ec.recod_date,ec.send_date,ec.send_date1,datediff(ec.send_date1,now())day,ec.blacklist1
     from email_customer ec left join email_user eu on
		eu.id=ec.translater_id   left join (select b.* from (
select cus_id,min(id)id from  email_cus_file a group by cus_id)a
left join email_cus_file b on a.id=b.id  )ecf on ecf.cus_id=ec.cid
		where blacklist=0 and public_customer_pool=1
		<if test="firstName != null">
			and	(first_name like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%') or email1 like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  or gs_full_name like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  or cid like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  )
			</if>
		 <if test="customerGrade != null">
				and customer_grade =#{customerGrade,jdbcType=VARCHAR}
			</if>
		order  by recod_date desc

		limit #{pageNumber},#{pageSize}
	</select>
	<select id="viewThePublicCustomerPoolTotal" resultType="java.lang.Integer">
		select
		count(1)
		from email_customer ec left join email_user eu on eu.id=ec.translater_id
		where blacklist=0 and public_customer_pool=1
		<if test="firstName != null">
			and	(first_name like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%') or email1 like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  or gs_full_name like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  or cid like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  )
			</if>
		 <if test="customerGrade != null">
				and customer_grade =#{customerGrade,jdbcType=VARCHAR}
			</if>

	</select>
	
	
	
	<!--查看待放弃客户池  -->
	<select id="viewThePublicCustomerPool1" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		
select
		ec.email1,ifnull(ec.tel,'')tel,ifnull(ec.tel1,'')tel1,ifnull(ec.tel2,'')tel2,ifnull(ec.tel3,'')tel3,ec.cid,ec.first_name,ifnull(eu.user_name,'')transName,ec.ybcontent,ec.customer_grade,ec.audit_date,ifnull(ecf.file_name,'')address2,ec.recod_date,ec.send_date,ec.send_date1,datediff(ec.send_date1,now())day,ec.blacklist1
     from email_customer ec left join email_user eu on
		eu.id=ec.translater_id   left join (select b.* from (
select cus_id,min(id)id from  email_cus_file a group by cus_id)a
left join email_cus_file b on a.id=b.id  )ecf on ecf.cus_id=ec.cid
left join email_sale es on es.cid=ec.cid
		where blacklist=0 and public_customer_pool=2
		<if test="firstName != null">
			and	(first_name like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%') or email1 like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  or gs_full_name like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  or cid like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  )
		</if>
		 <if test="customerGrade != null">
				and customer_grade =#{customerGrade,jdbcType=VARCHAR}
		</if>
		and es.sale_id=#{saleId,jdbcType=INTEGER}
		order  by recod_date desc

		limit #{pageNumber},#{pageSize}
	</select>
	<select id="viewThePublicCustomerPoolTotal1" resultType="java.lang.Integer">
		select
		count(1)
		from email_customer ec left join email_user eu on eu.id=ec.translater_id
		left join email_sale es on es.cid=ec.cid
		where blacklist=0 and public_customer_pool=2
		<if test="firstName != null">
			and	(first_name like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%') or email1 like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  or gs_full_name like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  or cid like CONCAT('%', #{firstName,jdbcType=VARCHAR}, '%')  )
			</if>
		 <if test="customerGrade != null">
				and customer_grade =#{customerGrade,jdbcType=VARCHAR}
			</if>
and es.sale_id=#{saleId,jdbcType=INTEGER}
	</select>
	
	
	
	
	
	
	
	
	
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from email_customer
		where cid = #{cid,jdbcType=INTEGER}
	</delete>
	
	
	
	
	
	
	
	
	
	
	
	
	
	<insert id="insert" parameterType="com.cn.hnust.pojo.EmailCustomer">
		insert into email_customer (cid, first_name, first_job,
		gs_full_name, other_name1, other_name2,
		most_recognize, recognize, email1,
		email2, email3, email4,
		email5, address, country,
		state, city, post_code,
		site_url, tel, fax,
		info, ybtitle, qbtitle,
		recoder, recod_date, sale_id,
		sale_date, is_translate, translater_id,
		translater_date, is_audit, audit_date,
		trans_date, date_line, audit_flag,
		sale_name, trans_name, sale_name1,
		projectStatus, sale_id1, get_project,
		transmit, create_project, send_date,
		send_date1, blacklist, time,
		title, project_descc, project_desce,
		flow_state, cid_name, confirm,
		ccid, ccname, status,
		customer_grade, download, type,
		original_mail, companypicture, logo,
		mailstatus, proposer, new_old,
		old_cid, tel1, tel2,
		tel3, address1, address2,
		priority, customer_type, pullcustomers,
		newandoldcustomers, customer_status, two_days_future_mail,
		incoming_mail, compan_nature, office_in_china,
		annualsales, company_number, main_products,
		company_definition, customer_attributes,
		approval_time, abandon_customer_time,
		examine_approve, examine_approve_time, blacklist1,
		ybcontent, qbcontent, content,
		companyprofile, get_content)
		values (#{cid,jdbcType=INTEGER}, #{firstName,jdbcType=VARCHAR},
		#{firstJob,jdbcType=VARCHAR},
		#{gsFullName,jdbcType=VARCHAR}, #{otherName1,jdbcType=VARCHAR}, #{otherName2,jdbcType=VARCHAR},
		#{mostRecognize,jdbcType=VARCHAR}, #{recognize,jdbcType=VARCHAR},
		#{email1,jdbcType=VARCHAR},
		#{email2,jdbcType=VARCHAR}, #{email3,jdbcType=VARCHAR}, #{email4,jdbcType=VARCHAR},
		#{email5,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{country,jdbcType=VARCHAR},
		#{state,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{postCode,jdbcType=VARCHAR},
		#{siteUrl,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},
		#{fax,jdbcType=VARCHAR},
		#{info,jdbcType=VARCHAR}, #{ybtitle,jdbcType=VARCHAR}, #{qbtitle,jdbcType=VARCHAR},
		#{recoder,jdbcType=VARCHAR}, #{recodDate,jdbcType=TIMESTAMP},
		#{saleId,jdbcType=INTEGER},
		#{saleDate,jdbcType=TIMESTAMP}, #{isTranslate,jdbcType=INTEGER}, #{translaterId,jdbcType=INTEGER},
		#{translaterDate,jdbcType=TIMESTAMP}, #{isAudit,jdbcType=INTEGER},
		#{auditDate,jdbcType=TIMESTAMP},
		#{transDate,jdbcType=TIMESTAMP}, #{dateLine,jdbcType=TIMESTAMP}, #{auditFlag,jdbcType=INTEGER},
		#{saleName,jdbcType=VARCHAR}, #{transName,jdbcType=VARCHAR},
		#{saleName1,jdbcType=VARCHAR},
		#{projectstatus,jdbcType=INTEGER}, #{saleId1,jdbcType=INTEGER}, #{getProject,jdbcType=INTEGER},
		#{transmit,jdbcType=INTEGER}, #{createProject,jdbcType=INTEGER},
		#{sendDate,jdbcType=TIMESTAMP},
		#{sendDate1,jdbcType=TIMESTAMP}, #{blacklist,jdbcType=INTEGER}, #{time,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR}, #{projectDescc,jdbcType=VARCHAR},
		#{projectDesce,jdbcType=VARCHAR},
		#{flowState,jdbcType=INTEGER}, #{cidName,jdbcType=VARCHAR}, #{confirm,jdbcType=INTEGER},
		#{ccid,jdbcType=INTEGER}, #{ccname,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR},
		#{customerGrade,jdbcType=VARCHAR}, #{download,jdbcType=INTEGER}, #{type,jdbcType=INTEGER},
		#{originalMail,jdbcType=VARCHAR}, #{companypicture,jdbcType=VARCHAR},
		#{logo,jdbcType=INTEGER},
		#{mailstatus,jdbcType=INTEGER}, #{proposer,jdbcType=VARCHAR}, #{newOld,jdbcType=INTEGER},
		#{oldCid,jdbcType=INTEGER}, #{tel1,jdbcType=VARCHAR},
		#{tel2,jdbcType=VARCHAR},
		#{tel3,jdbcType=VARCHAR}, #{address1,jdbcType=VARCHAR}, #{address2,jdbcType=VARCHAR},
		#{priority,jdbcType=INTEGER}, #{customerType,jdbcType=INTEGER},
		#{pullcustomers,jdbcType=INTEGER},
		#{newandoldcustomers,jdbcType=INTEGER},
		#{customerStatus,jdbcType=INTEGER},
		#{twoDaysFutureMail,jdbcType=INTEGER},
		#{incomingMail,jdbcType=INTEGER}, #{companNature,jdbcType=VARCHAR},
		#{officeInChina,jdbcType=INTEGER},
		#{annualsales,jdbcType=VARCHAR}, #{companyNumber,jdbcType=VARCHAR}, #{mainProducts,jdbcType=VARCHAR},
		#{companyDefinition,jdbcType=INTEGER},
		#{customerAttributes,jdbcType=INTEGER},
		#{approvalTime,jdbcType=TIMESTAMP},
		#{abandonCustomerTime,jdbcType=TIMESTAMP},
		#{examineApprove,jdbcType=INTEGER},
		#{examineApproveTime,jdbcType=VARCHAR},
		#{blacklist1,jdbcType=INTEGER},
		#{ybcontent,jdbcType=LONGVARCHAR}, #{qbcontent,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR},
		#{companyprofile,jdbcType=LONGVARCHAR},
		#{getContent,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.cn.hnust.pojo.EmailCustomer">
		insert into email_customer
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="cid != null">
				cid,
			</if>
			<if test="firstName != null">
				first_name,
			</if>
			<if test="firstJob != null">
				first_job,
			</if>
			<if test="gsFullName != null">
				gs_full_name,
			</if>
			<if test="otherName1 != null">
				other_name1,
			</if>
			<if test="otherName2 != null">
				other_name2,
			</if>
			<if test="mostRecognize != null">
				most_recognize,
			</if>
			<if test="recognize != null">
				recognize,
			</if>
			<if test="email1 != null">
				email1,
			</if>
			<if test="email2 != null">
				email2,
			</if>
			<if test="email3 != null">
				email3,
			</if>
			<if test="email4 != null">
				email4,
			</if>
			<if test="email5 != null">
				email5,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="country != null">
				country,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="postCode != null">
				post_code,
			</if>
			<if test="siteUrl != null">
				site_url,
			</if>
			<if test="tel != null">
				tel,
			</if>
			<if test="fax != null">
				fax,
			</if>
			<if test="info != null">
				info,
			</if>
			<if test="ybtitle != null">
				ybtitle,
			</if>
			<if test="qbtitle != null">
				qbtitle,
			</if>
			<if test="recoder != null">
				recoder,
			</if>
			<if test="recodDate != null">
				recod_date,
			</if>
			<if test="saleId != null">
				sale_id,
			</if>
			<if test="saleDate != null">
				sale_date,
			</if>
			<if test="isTranslate != null">
				is_translate,
			</if>
			<if test="translaterId != null">
				translater_id,
			</if>
			<if test="translaterDate != null">
				translater_date,
			</if>
			<if test="isAudit != null">
				is_audit,
			</if>
			<if test="auditDate != null">
				audit_date,
			</if>
			<if test="transDate != null">
				trans_date,
			</if>
			<if test="dateLine != null">
				date_line,
			</if>
			<if test="auditFlag != null">
				audit_flag,
			</if>
			<if test="saleName != null">
				sale_name,
			</if>
			<if test="transName != null">
				trans_name,
			</if>
			<if test="saleName1 != null">
				sale_name1,
			</if>
			<if test="projectstatus != null">
				projectStatus,
			</if>
			<if test="saleId1 != null">
				sale_id1,
			</if>
			<if test="getProject != null">
				get_project,
			</if>
			<if test="transmit != null">
				transmit,
			</if>
			<if test="createProject != null">
				create_project,
			</if>
			<if test="sendDate != null">
				send_date,
			</if>
			<if test="sendDate1 != null">
				send_date1,
			</if>
			<if test="blacklist != null">
				blacklist,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="projectDescc != null">
				project_descc,
			</if>
			<if test="projectDesce != null">
				project_desce,
			</if>
			<if test="flowState != null">
				flow_state,
			</if>
			<if test="cidName != null">
				cid_name,
			</if>
			<if test="confirm != null">
				confirm,
			</if>
			<if test="ccid != null">
				ccid,
			</if>
			<if test="ccname != null">
				ccname,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="customerGrade != null">
				customer_grade,
			</if>
			<if test="download != null">
				download,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="originalMail != null">
				original_mail,
			</if>
			<if test="companypicture != null">
				companypicture,
			</if>
			<if test="logo != null">
				logo,
			</if>
			<if test="mailstatus != null">
				mailstatus,
			</if>
			<if test="proposer != null">
				proposer,
			</if>
			<if test="newOld != null">
				new_old,
			</if>
			<if test="oldCid != null">
				old_cid,
			</if>
			<if test="tel1 != null">
				tel1,
			</if>
			<if test="tel2 != null">
				tel2,
			</if>
			<if test="tel3 != null">
				tel3,
			</if>
			<if test="address1 != null">
				address1,
			</if>
			<if test="address2 != null">
				address2,
			</if>
			<if test="priority != null">
				priority,
			</if>
			<if test="customerType != null">
				customer_type,
			</if>
			<if test="pullcustomers != null">
				pullcustomers,
			</if>
			<if test="newandoldcustomers != null">
				newandoldcustomers,
			</if>
			<if test="customerStatus != null">
				customer_status,
			</if>
			<if test="twoDaysFutureMail != null">
				two_days_future_mail,
			</if>
			<if test="incomingMail != null">
				incoming_mail,
			</if>
			<if test="companNature != null">
				compan_nature,
			</if>
			<if test="officeInChina != null">
				office_in_china,
			</if>
			<if test="annualsales != null">
				annualsales,
			</if>
			<if test="companyNumber != null">
				company_number,
			</if>
			<if test="mainProducts != null">
				main_products,
			</if>
			<if test="companyDefinition != null">
				company_definition,
			</if>
			<if test="customerAttributes != null">
				customer_attributes,
			</if>
			<if test="approvalTime != null">
				approval_time,
			</if>
			<if test="abandonCustomerTime != null">
				abandon_customer_time,
			</if>
			<if test="examineApprove != null">
				examine_approve,
			</if>
			<if test="examineApproveTime != null">
				examine_approve_time,
			</if>
			<if test="blacklist1 != null">
				blacklist1,
			</if>
			<if test="ybcontent != null">
				ybcontent,
			</if>
			<if test="qbcontent != null">
				qbcontent,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="companyprofile != null">
				companyprofile,
			</if>
			<if test="getContent != null">
				get_content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="cid != null">
				#{cid,jdbcType=INTEGER},
			</if>
			<if test="firstName != null">
				#{firstName,jdbcType=VARCHAR},
			</if>
			<if test="firstJob != null">
				#{firstJob,jdbcType=VARCHAR},
			</if>
			<if test="gsFullName != null">
				#{gsFullName,jdbcType=VARCHAR},
			</if>
			<if test="otherName1 != null">
				#{otherName1,jdbcType=VARCHAR},
			</if>
			<if test="otherName2 != null">
				#{otherName2,jdbcType=VARCHAR},
			</if>
			<if test="mostRecognize != null">
				#{mostRecognize,jdbcType=VARCHAR},
			</if>
			<if test="recognize != null">
				#{recognize,jdbcType=VARCHAR},
			</if>
			<if test="email1 != null">
				#{email1,jdbcType=VARCHAR},
			</if>
			<if test="email2 != null">
				#{email2,jdbcType=VARCHAR},
			</if>
			<if test="email3 != null">
				#{email3,jdbcType=VARCHAR},
			</if>
			<if test="email4 != null">
				#{email4,jdbcType=VARCHAR},
			</if>
			<if test="email5 != null">
				#{email5,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				#{country,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="postCode != null">
				#{postCode,jdbcType=VARCHAR},
			</if>
			<if test="siteUrl != null">
				#{siteUrl,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				#{tel,jdbcType=VARCHAR},
			</if>
			<if test="fax != null">
				#{fax,jdbcType=VARCHAR},
			</if>
			<if test="info != null">
				#{info,jdbcType=VARCHAR},
			</if>
			<if test="ybtitle != null">
				#{ybtitle,jdbcType=VARCHAR},
			</if>
			<if test="qbtitle != null">
				#{qbtitle,jdbcType=VARCHAR},
			</if>
			<if test="recoder != null">
				#{recoder,jdbcType=VARCHAR},
			</if>
			<if test="recodDate != null">
				#{recodDate,jdbcType=TIMESTAMP},
			</if>
			<if test="saleId != null">
				#{saleId,jdbcType=INTEGER},
			</if>
			<if test="saleDate != null">
				#{saleDate,jdbcType=TIMESTAMP},
			</if>
			<if test="isTranslate != null">
				#{isTranslate,jdbcType=INTEGER},
			</if>
			<if test="translaterId != null">
				#{translaterId,jdbcType=INTEGER},
			</if>
			<if test="translaterDate != null">
				#{translaterDate,jdbcType=TIMESTAMP},
			</if>
			<if test="isAudit != null">
				#{isAudit,jdbcType=INTEGER},
			</if>
			<if test="auditDate != null">
				#{auditDate,jdbcType=TIMESTAMP},
			</if>
			<if test="transDate != null">
				#{transDate,jdbcType=TIMESTAMP},
			</if>
			<if test="dateLine != null">
				#{dateLine,jdbcType=TIMESTAMP},
			</if>
			<if test="auditFlag != null">
				#{auditFlag,jdbcType=INTEGER},
			</if>
			<if test="saleName != null">
				#{saleName,jdbcType=VARCHAR},
			</if>
			<if test="transName != null">
				#{transName,jdbcType=VARCHAR},
			</if>
			<if test="saleName1 != null">
				#{saleName1,jdbcType=VARCHAR},
			</if>
			<if test="projectstatus != null">
				#{projectstatus,jdbcType=INTEGER},
			</if>
			<if test="saleId1 != null">
				#{saleId1,jdbcType=INTEGER},
			</if>
			<if test="getProject != null">
				#{getProject,jdbcType=INTEGER},
			</if>
			<if test="transmit != null">
				#{transmit,jdbcType=INTEGER},
			</if>
			<if test="createProject != null">
				#{createProject,jdbcType=INTEGER},
			</if>
			<if test="sendDate != null">
				#{sendDate,jdbcType=TIMESTAMP},
			</if>
			<if test="sendDate1 != null">
				#{sendDate1,jdbcType=TIMESTAMP},
			</if>
			<if test="blacklist != null">
				#{blacklist,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="projectDescc != null">
				#{projectDescc,jdbcType=VARCHAR},
			</if>
			<if test="projectDesce != null">
				#{projectDesce,jdbcType=VARCHAR},
			</if>
			<if test="flowState != null">
				#{flowState,jdbcType=INTEGER},
			</if>
			<if test="cidName != null">
				#{cidName,jdbcType=VARCHAR},
			</if>
			<if test="confirm != null">
				#{confirm,jdbcType=INTEGER},
			</if>
			<if test="ccid != null">
				#{ccid,jdbcType=INTEGER},
			</if>
			<if test="ccname != null">
				#{ccname,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="customerGrade != null">
				#{customerGrade,jdbcType=VARCHAR},
			</if>
			<if test="download != null">
				#{download,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="originalMail != null">
				#{originalMail,jdbcType=VARCHAR},
			</if>
			<if test="companypicture != null">
				#{companypicture,jdbcType=VARCHAR},
			</if>
			<if test="logo != null">
				#{logo,jdbcType=INTEGER},
			</if>
			<if test="mailstatus != null">
				#{mailstatus,jdbcType=INTEGER},
			</if>
			<if test="proposer != null">
				#{proposer,jdbcType=VARCHAR},
			</if>
			<if test="newOld != null">
				#{newOld,jdbcType=INTEGER},
			</if>
			<if test="oldCid != null">
				#{oldCid,jdbcType=INTEGER},
			</if>
			<if test="tel1 != null">
				#{tel1,jdbcType=VARCHAR},
			</if>
			<if test="tel2 != null">
				#{tel2,jdbcType=VARCHAR},
			</if>
			<if test="tel3 != null">
				#{tel3,jdbcType=VARCHAR},
			</if>
			<if test="address1 != null">
				#{address1,jdbcType=VARCHAR},
			</if>
			<if test="address2 != null">
				#{address2,jdbcType=VARCHAR},
			</if>
			<if test="priority != null">
				#{priority,jdbcType=INTEGER},
			</if>
			<if test="customerType != null">
				#{customerType,jdbcType=INTEGER},
			</if>
			<if test="pullcustomers != null">
				#{pullcustomers,jdbcType=INTEGER},
			</if>
			<if test="newandoldcustomers != null">
				#{newandoldcustomers,jdbcType=INTEGER},
			</if>
			<if test="customerStatus != null">
				#{customerStatus,jdbcType=INTEGER},
			</if>
			<if test="twoDaysFutureMail != null">
				#{twoDaysFutureMail,jdbcType=INTEGER},
			</if>
			<if test="incomingMail != null">
				#{incomingMail,jdbcType=INTEGER},
			</if>
			<if test="companNature != null">
				#{companNature,jdbcType=VARCHAR},
			</if>
			<if test="officeInChina != null">
				#{officeInChina,jdbcType=INTEGER},
			</if>
			<if test="annualsales != null">
				#{annualsales,jdbcType=VARCHAR},
			</if>
			<if test="companyNumber != null">
				#{companyNumber,jdbcType=VARCHAR},
			</if>
			<if test="mainProducts != null">
				#{mainProducts,jdbcType=VARCHAR},
			</if>
			<if test="companyDefinition != null">
				#{companyDefinition,jdbcType=INTEGER},
			</if>
			<if test="customerAttributes != null">
				#{customerAttributes,jdbcType=INTEGER},
			</if>
			<if test="approvalTime != null">
				#{approvalTime,jdbcType=TIMESTAMP},
			</if>
			<if test="abandonCustomerTime != null">
				#{abandonCustomerTime,jdbcType=TIMESTAMP},
			</if>
			<if test="examineApprove != null">
				#{examineApprove,jdbcType=INTEGER},
			</if>
			<if test="examineApproveTime != null">
				#{examineApproveTime,jdbcType=VARCHAR},
			</if>
			<if test="blacklist1 != null">
				#{blacklist1,jdbcType=INTEGER},
			</if>
			<if test="ybcontent != null">
				#{ybcontent,jdbcType=LONGVARCHAR},
			</if>
			<if test="qbcontent != null">
				#{qbcontent,jdbcType=LONGVARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="companyprofile != null">
				#{companyprofile,jdbcType=LONGVARCHAR},
			</if>
			<if test="getContent != null">
				#{getContent,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.EmailCustomer">
		update email_customer
		<set>
			<if test="firstName != null">
				first_name = #{firstName,jdbcType=VARCHAR},
			</if>
			<if test="firstJob != null">
				first_job = #{firstJob,jdbcType=VARCHAR},
			</if>
			<if test="gsFullName != null">
				gs_full_name = #{gsFullName,jdbcType=VARCHAR},
			</if>
			<if test="otherName1 != null">
				other_name1 = #{otherName1,jdbcType=VARCHAR},
			</if>
			<if test="otherName2 != null">
				other_name2 = #{otherName2,jdbcType=VARCHAR},
			</if>
			<if test="mostRecognize != null">
				most_recognize = #{mostRecognize,jdbcType=VARCHAR},
			</if>
			<if test="recognize != null">
				recognize = #{recognize,jdbcType=VARCHAR},
			</if>
			<if test="email1 != null">
				email1 = #{email1,jdbcType=VARCHAR},
			</if>
			<if test="email2 != null">
				email2 = #{email2,jdbcType=VARCHAR},
			</if>
			<if test="email3 != null">
				email3 = #{email3,jdbcType=VARCHAR},
			</if>
			<if test="email4 != null">
				email4 = #{email4,jdbcType=VARCHAR},
			</if>
			<if test="email5 != null">
				email5 = #{email5,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				country = #{country,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="postCode != null">
				post_code = #{postCode,jdbcType=VARCHAR},
			</if>
			<if test="siteUrl != null">
				site_url = #{siteUrl,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				tel = #{tel,jdbcType=VARCHAR},
			</if>
			<if test="fax != null">
				fax = #{fax,jdbcType=VARCHAR},
			</if>
			<if test="info != null">
				info = #{info,jdbcType=VARCHAR},
			</if>
			<if test="ybtitle != null">
				ybtitle = #{ybtitle,jdbcType=VARCHAR},
			</if>
			<if test="qbtitle != null">
				qbtitle = #{qbtitle,jdbcType=VARCHAR},
			</if>
			<if test="recoder != null">
				recoder = #{recoder,jdbcType=VARCHAR},
			</if>
			<if test="recodDate != null">
				recod_date = #{recodDate,jdbcType=TIMESTAMP},
			</if>
			<if test="saleId != null">
				sale_id = #{saleId,jdbcType=INTEGER},
			</if>
			<if test="saleDate != null">
				sale_date = #{saleDate,jdbcType=TIMESTAMP},
			</if>
			<if test="isTranslate != null">
				is_translate = #{isTranslate,jdbcType=INTEGER},
			</if>
			<if test="translaterId != null">
				translater_id = #{translaterId,jdbcType=INTEGER},
			</if>
			<if test="translaterDate != null">
				translater_date = #{translaterDate,jdbcType=TIMESTAMP},
			</if>
			<if test="isAudit != null">
				is_audit = #{isAudit,jdbcType=INTEGER},
			</if>
			<if test="auditDate != null">
				audit_date = #{auditDate,jdbcType=TIMESTAMP},
			</if>
			<if test="transDate != null">
				trans_date = #{transDate,jdbcType=TIMESTAMP},
			</if>
			<if test="dateLine != null">
				date_line = #{dateLine,jdbcType=TIMESTAMP},
			</if>
			<if test="auditFlag != null">
				audit_flag = #{auditFlag,jdbcType=INTEGER},
			</if>
			<if test="saleName != null">
				sale_name = #{saleName,jdbcType=VARCHAR},
			</if>
			<if test="transName != null">
				trans_name = #{transName,jdbcType=VARCHAR},
			</if>
			<if test="saleName1 != null">
				sale_name1 = #{saleName1,jdbcType=VARCHAR},
			</if>
			<if test="projectstatus != null">
				projectStatus = #{projectstatus,jdbcType=INTEGER},
			</if>
			<if test="saleId1 != null">
				sale_id1 = #{saleId1,jdbcType=INTEGER},
			</if>
			<if test="getProject != null">
				get_project = #{getProject,jdbcType=INTEGER},
			</if>
			<if test="transmit != null">
				transmit = #{transmit,jdbcType=INTEGER},
			</if>
			<if test="createProject != null">
				create_project = #{createProject,jdbcType=INTEGER},
			</if>
			<if test="sendDate != null">
				send_date = #{sendDate,jdbcType=TIMESTAMP},
			</if>
			<if test="sendDate1 != null">
				send_date1 = #{sendDate1,jdbcType=TIMESTAMP},
			</if>
			<if test="blacklist != null">
				blacklist = #{blacklist,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="projectDescc != null">
				project_descc = #{projectDescc,jdbcType=VARCHAR},
			</if>
			<if test="projectDesce != null">
				project_desce = #{projectDesce,jdbcType=VARCHAR},
			</if>
			<if test="flowState != null">
				flow_state = #{flowState,jdbcType=INTEGER},
			</if>
			<if test="cidName != null">
				cid_name = #{cidName,jdbcType=VARCHAR},
			</if>
			<if test="confirm != null">
				confirm = #{confirm,jdbcType=INTEGER},
			</if>
			<if test="ccid != null">
				ccid = #{ccid,jdbcType=INTEGER},
			</if>
			<if test="ccname != null">
				ccname = #{ccname,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="customerGrade != null">
				customer_grade = #{customerGrade,jdbcType=VARCHAR},
			</if>
			<if test="download != null">
				download = #{download,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="originalMail != null">
				original_mail = #{originalMail,jdbcType=VARCHAR},
			</if>
			<if test="companypicture != null">
				companypicture = #{companypicture,jdbcType=VARCHAR},
			</if>
			<if test="logo != null">
				logo = #{logo,jdbcType=INTEGER},
			</if>
			<if test="mailstatus != null">
				mailstatus = #{mailstatus,jdbcType=INTEGER},
			</if>
			<if test="proposer != null">
				proposer = #{proposer,jdbcType=VARCHAR},
			</if>
			<if test="newOld != null">
				new_old = #{newOld,jdbcType=INTEGER},
			</if>
			<if test="oldCid != null">
				old_cid = #{oldCid,jdbcType=INTEGER},
			</if>
			<if test="tel1 != null">
				tel1 = #{tel1,jdbcType=VARCHAR},
			</if>
			<if test="tel2 != null">
				tel2 = #{tel2,jdbcType=VARCHAR},
			</if>
			<if test="tel3 != null">
				tel3 = #{tel3,jdbcType=VARCHAR},
			</if>
			<if test="address1 != null">
				address1 = #{address1,jdbcType=VARCHAR},
			</if>
			<if test="address2 != null">
				address2 = #{address2,jdbcType=VARCHAR},
			</if>
			<if test="priority != null">
				priority = #{priority,jdbcType=INTEGER},
			</if>
			<if test="customerType != null">
				customer_type = #{customerType,jdbcType=INTEGER},
			</if>
			<if test="pullcustomers != null">
				pullcustomers = #{pullcustomers,jdbcType=INTEGER},
			</if>
			<if test="newandoldcustomers != null">
				newandoldcustomers = #{newandoldcustomers,jdbcType=INTEGER},
			</if>
			<if test="customerStatus != null">
				customer_status = #{customerStatus,jdbcType=INTEGER},
			</if>
			<if test="twoDaysFutureMail != null">
				two_days_future_mail = #{twoDaysFutureMail,jdbcType=INTEGER},
			</if>
			<if test="incomingMail != null">
				incoming_mail = #{incomingMail,jdbcType=INTEGER},
			</if>
			<if test="companNature != null">
				compan_nature = #{companNature,jdbcType=VARCHAR},
			</if>
			<if test="officeInChina != null">
				office_in_china = #{officeInChina,jdbcType=INTEGER},
			</if>
			<if test="annualsales != null">
				annualsales = #{annualsales,jdbcType=VARCHAR},
			</if>
			<if test="companyNumber != null">
				company_number = #{companyNumber,jdbcType=VARCHAR},
			</if>
			<if test="mainProducts != null">
				main_products = #{mainProducts,jdbcType=VARCHAR},
			</if>
			<if test="companyDefinition != null">
				company_definition = #{companyDefinition,jdbcType=INTEGER},
			</if>
			<if test="customerAttributes != null">
				customer_attributes = #{customerAttributes,jdbcType=INTEGER},
			</if>
			<if test="approvalTime != null">
				approval_time = #{approvalTime,jdbcType=TIMESTAMP},
			</if>
			<if test="abandonCustomerTime != null">
				abandon_customer_time = #{abandonCustomerTime,jdbcType=TIMESTAMP},
			</if>
			<if test="examineApprove != null">
				examine_approve = #{examineApprove,jdbcType=INTEGER},
			</if>
			<if test="examineApproveTime != null">
				examine_approve_time = #{examineApproveTime,jdbcType=VARCHAR},
			</if>
			<if test="blacklist1 != null">
				blacklist1 = #{blacklist1,jdbcType=INTEGER},
			</if>
			<if test="ybcontent != null">
				ybcontent = #{ybcontent,jdbcType=LONGVARCHAR},
			</if>
			<if test="qbcontent != null">
				qbcontent = #{qbcontent,jdbcType=LONGVARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="companyprofile != null">
				companyprofile = #{companyprofile,jdbcType=LONGVARCHAR},
			</if>
			<if test="getContent != null">
				get_content = #{getContent,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where cid = #{cid,jdbcType=INTEGER}
	</update>
	<update id="updateSaleName" parameterType="com.cn.hnust.pojo.EmailCustomer">
		update email_customer
		<set>
		<if test="saleId != null">
			<if test="saleId != 0 ">
				
				public_customer_pool=0,
			</if>
			</if>
			<if test="saleId ==0">
				
				public_customer_pool=1,
			</if>
		</set>
		where cid = #{cid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cn.hnust.pojo.EmailCustomer">
		update email_customer
		set first_name = #{firstName,jdbcType=VARCHAR},
		first_job = #{firstJob,jdbcType=VARCHAR},
		gs_full_name = #{gsFullName,jdbcType=VARCHAR},
		other_name1 = #{otherName1,jdbcType=VARCHAR},
		other_name2 = #{otherName2,jdbcType=VARCHAR},
		most_recognize = #{mostRecognize,jdbcType=VARCHAR},
		recognize = #{recognize,jdbcType=VARCHAR},
		email1 = #{email1,jdbcType=VARCHAR},
		email2 = #{email2,jdbcType=VARCHAR},
		email3 = #{email3,jdbcType=VARCHAR},
		email4 = #{email4,jdbcType=VARCHAR},
		email5 = #{email5,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		country = #{country,jdbcType=VARCHAR},
		state = #{state,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		post_code = #{postCode,jdbcType=VARCHAR},
		site_url = #{siteUrl,jdbcType=VARCHAR},
		tel = #{tel,jdbcType=VARCHAR},
		fax = #{fax,jdbcType=VARCHAR},
		info = #{info,jdbcType=VARCHAR},
		ybtitle = #{ybtitle,jdbcType=VARCHAR},
		qbtitle = #{qbtitle,jdbcType=VARCHAR},
		recoder = #{recoder,jdbcType=VARCHAR},
		recod_date = #{recodDate,jdbcType=TIMESTAMP},
		sale_id = #{saleId,jdbcType=INTEGER},
		sale_date = #{saleDate,jdbcType=TIMESTAMP},
		is_translate = #{isTranslate,jdbcType=INTEGER},
		translater_id = #{translaterId,jdbcType=INTEGER},
		translater_date = #{translaterDate,jdbcType=TIMESTAMP},
		is_audit = #{isAudit,jdbcType=INTEGER},
		audit_date = #{auditDate,jdbcType=TIMESTAMP},
		trans_date = #{transDate,jdbcType=TIMESTAMP},
		date_line = #{dateLine,jdbcType=TIMESTAMP},
		audit_flag = #{auditFlag,jdbcType=INTEGER},
		sale_name = #{saleName,jdbcType=VARCHAR},
		trans_name = #{transName,jdbcType=VARCHAR},
		sale_name1 = #{saleName1,jdbcType=VARCHAR},
		projectStatus = #{projectstatus,jdbcType=INTEGER},
		sale_id1 = #{saleId1,jdbcType=INTEGER},
		get_project = #{getProject,jdbcType=INTEGER},
		transmit = #{transmit,jdbcType=INTEGER},
		create_project = #{createProject,jdbcType=INTEGER},
		send_date = #{sendDate,jdbcType=TIMESTAMP},
		send_date1 = #{sendDate1,jdbcType=TIMESTAMP},
		blacklist = #{blacklist,jdbcType=INTEGER},
		time = #{time,jdbcType=INTEGER},
		title = #{title,jdbcType=VARCHAR},
		project_descc = #{projectDescc,jdbcType=VARCHAR},
		project_desce = #{projectDesce,jdbcType=VARCHAR},
		flow_state = #{flowState,jdbcType=INTEGER},
		cid_name = #{cidName,jdbcType=VARCHAR},
		confirm = #{confirm,jdbcType=INTEGER},
		ccid = #{ccid,jdbcType=INTEGER},
		ccname = #{ccname,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR},
		customer_grade = #{customerGrade,jdbcType=VARCHAR},
		download = #{download,jdbcType=INTEGER},
		type = #{type,jdbcType=INTEGER},
		original_mail = #{originalMail,jdbcType=VARCHAR},
		companypicture = #{companypicture,jdbcType=VARCHAR},
		logo = #{logo,jdbcType=INTEGER},
		mailstatus = #{mailstatus,jdbcType=INTEGER},
		proposer = #{proposer,jdbcType=VARCHAR},
		new_old = #{newOld,jdbcType=INTEGER},
		old_cid = #{oldCid,jdbcType=INTEGER},
		tel1 = #{tel1,jdbcType=VARCHAR},
		tel2 = #{tel2,jdbcType=VARCHAR},
		tel3 = #{tel3,jdbcType=VARCHAR},
		address1 = #{address1,jdbcType=VARCHAR},
		address2 = #{address2,jdbcType=VARCHAR},
		priority = #{priority,jdbcType=INTEGER},
		customer_type = #{customerType,jdbcType=INTEGER},
		pullcustomers = #{pullcustomers,jdbcType=INTEGER},
		newandoldcustomers = #{newandoldcustomers,jdbcType=INTEGER},
		customer_status = #{customerStatus,jdbcType=INTEGER},
		two_days_future_mail = #{twoDaysFutureMail,jdbcType=INTEGER},
		incoming_mail = #{incomingMail,jdbcType=INTEGER},
		compan_nature = #{companNature,jdbcType=VARCHAR},
		office_in_china = #{officeInChina,jdbcType=INTEGER},
		annualsales = #{annualsales,jdbcType=VARCHAR},
		company_number = #{companyNumber,jdbcType=VARCHAR},
		main_products = #{mainProducts,jdbcType=VARCHAR},
		company_definition = #{companyDefinition,jdbcType=INTEGER},
		customer_attributes = #{customerAttributes,jdbcType=INTEGER},
		approval_time = #{approvalTime,jdbcType=TIMESTAMP},
		abandon_customer_time = #{abandonCustomerTime,jdbcType=TIMESTAMP},
		examine_approve = #{examineApprove,jdbcType=INTEGER},
		examine_approve_time = #{examineApproveTime,jdbcType=VARCHAR},
		blacklist1 = #{blacklist1,jdbcType=INTEGER},
		ybcontent = #{ybcontent,jdbcType=LONGVARCHAR},
		qbcontent = #{qbcontent,jdbcType=LONGVARCHAR},
		content = #{content,jdbcType=LONGVARCHAR},
		companyprofile = #{companyprofile,jdbcType=LONGVARCHAR},
		get_content = #{getContent,jdbcType=LONGVARCHAR}
		where cid = #{cid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.EmailCustomer">
		update email_customer
		set first_name = #{firstName,jdbcType=VARCHAR},
		first_job = #{firstJob,jdbcType=VARCHAR},
		gs_full_name = #{gsFullName,jdbcType=VARCHAR},
		other_name1 = #{otherName1,jdbcType=VARCHAR},
		other_name2 = #{otherName2,jdbcType=VARCHAR},
		most_recognize = #{mostRecognize,jdbcType=VARCHAR},
		recognize = #{recognize,jdbcType=VARCHAR},
		email1 = #{email1,jdbcType=VARCHAR},
		email2 = #{email2,jdbcType=VARCHAR},
		email3 = #{email3,jdbcType=VARCHAR},
		email4 = #{email4,jdbcType=VARCHAR},
		email5 = #{email5,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		country = #{country,jdbcType=VARCHAR},
		state = #{state,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		post_code = #{postCode,jdbcType=VARCHAR},
		site_url = #{siteUrl,jdbcType=VARCHAR},
		tel = #{tel,jdbcType=VARCHAR},
		fax = #{fax,jdbcType=VARCHAR},
		info = #{info,jdbcType=VARCHAR},
		ybtitle = #{ybtitle,jdbcType=VARCHAR},
		qbtitle = #{qbtitle,jdbcType=VARCHAR},
		recoder = #{recoder,jdbcType=VARCHAR},
		recod_date = #{recodDate,jdbcType=TIMESTAMP},
		sale_id = #{saleId,jdbcType=INTEGER},
		sale_date = #{saleDate,jdbcType=TIMESTAMP},
		is_translate = #{isTranslate,jdbcType=INTEGER},
		translater_id = #{translaterId,jdbcType=INTEGER},
		translater_date = #{translaterDate,jdbcType=TIMESTAMP},
		is_audit = #{isAudit,jdbcType=INTEGER},
		audit_date = #{auditDate,jdbcType=TIMESTAMP},
		trans_date = #{transDate,jdbcType=TIMESTAMP},
		date_line = #{dateLine,jdbcType=TIMESTAMP},
		audit_flag = #{auditFlag,jdbcType=INTEGER},
		sale_name = #{saleName,jdbcType=VARCHAR},
		trans_name = #{transName,jdbcType=VARCHAR},
		sale_name1 = #{saleName1,jdbcType=VARCHAR},
		projectStatus = #{projectstatus,jdbcType=INTEGER},
		sale_id1 = #{saleId1,jdbcType=INTEGER},
		get_project = #{getProject,jdbcType=INTEGER},
		transmit = #{transmit,jdbcType=INTEGER},
		create_project = #{createProject,jdbcType=INTEGER},
		send_date = #{sendDate,jdbcType=TIMESTAMP},
		send_date1 = #{sendDate1,jdbcType=TIMESTAMP},
		blacklist = #{blacklist,jdbcType=INTEGER},
		time = #{time,jdbcType=INTEGER},
		title = #{title,jdbcType=VARCHAR},
		project_descc = #{projectDescc,jdbcType=VARCHAR},
		project_desce = #{projectDesce,jdbcType=VARCHAR},
		flow_state = #{flowState,jdbcType=INTEGER},
		cid_name = #{cidName,jdbcType=VARCHAR},
		confirm = #{confirm,jdbcType=INTEGER},
		ccid = #{ccid,jdbcType=INTEGER},
		ccname = #{ccname,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR},
		customer_grade = #{customerGrade,jdbcType=VARCHAR},
		download = #{download,jdbcType=INTEGER},
		type = #{type,jdbcType=INTEGER},
		original_mail = #{originalMail,jdbcType=VARCHAR},
		companypicture = #{companypicture,jdbcType=VARCHAR},
		logo = #{logo,jdbcType=INTEGER},
		mailstatus = #{mailstatus,jdbcType=INTEGER},
		proposer = #{proposer,jdbcType=VARCHAR},
		new_old = #{newOld,jdbcType=INTEGER},
		old_cid = #{oldCid,jdbcType=INTEGER},
		tel1 = #{tel1,jdbcType=VARCHAR},
		tel2 = #{tel2,jdbcType=VARCHAR},
		tel3 = #{tel3,jdbcType=VARCHAR},
		address1 = #{address1,jdbcType=VARCHAR},
		address2 = #{address2,jdbcType=VARCHAR},
		priority = #{priority,jdbcType=INTEGER},
		customer_type = #{customerType,jdbcType=INTEGER},
		pullcustomers = #{pullcustomers,jdbcType=INTEGER},
		newandoldcustomers = #{newandoldcustomers,jdbcType=INTEGER},
		customer_status = #{customerStatus,jdbcType=INTEGER},
		two_days_future_mail = #{twoDaysFutureMail,jdbcType=INTEGER},
		incoming_mail = #{incomingMail,jdbcType=INTEGER},
		compan_nature = #{companNature,jdbcType=VARCHAR},
		office_in_china = #{officeInChina,jdbcType=INTEGER},
		annualsales = #{annualsales,jdbcType=VARCHAR},
		company_number = #{companyNumber,jdbcType=VARCHAR},
		main_products = #{mainProducts,jdbcType=VARCHAR},
		company_definition = #{companyDefinition,jdbcType=INTEGER},
		customer_attributes = #{customerAttributes,jdbcType=INTEGER},
		approval_time = #{approvalTime,jdbcType=TIMESTAMP},
		abandon_customer_time = #{abandonCustomerTime,jdbcType=TIMESTAMP},
		examine_approve = #{examineApprove,jdbcType=INTEGER},
		examine_approve_time = #{examineApproveTime,jdbcType=VARCHAR},
		blacklist1 = #{blacklist1,jdbcType=INTEGER}
		where cid = #{cid,jdbcType=INTEGER}
	</update>




	<update id="updateOutlookCustomers" parameterType="com.cn.hnust.pojo.EmailCustomer">
		update email_customer
		set outlook_customers=#{outlookCustomers,jdbcType=INTEGER}
		where cid = #{cid,jdbcType=INTEGER}
	</update>
	<update id="updateAgreeGiveUpCustomers" parameterType="com.cn.hnust.pojo.EmailCustomer">
		update email_customer
		set blacklist=blacklist1 ,examine_approve=2,examine_approve_time=now()
		where cid = #{cid,jdbcType=INTEGER}
	</update>
	<update id="updateAgreeGiveUpCustomers1" parameterType="com.cn.hnust.pojo.EmailCustomer">
		update email_customer
		set examine_approve=3,examine_approve_time=now()
		where cid = #{cid,jdbcType=INTEGER}
	</update>
	
	
</mapper>